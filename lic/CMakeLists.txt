CMAKE_MINIMUM_REQUIRED(VERSION 3.16.0)

PROJECT(LIC VERSION 0.1.0 LANGUAGES C)

# Public API
SET(LIC_INCLUDE_DIR ./include)
SET(PUBLIC_HEADERS
    ${LIC_INCLUDE_DIR}/lic_common.h
    ${LIC_INCLUDE_DIR}/lic_sign.h
    ${LIC_INCLUDE_DIR}/lic_verify.h
)
SOURCE_GROUP("Public API" FILES ${PUBLIC_HEADERS})

SET(SRC_LIST
    src/certificate.c
    src/lic_machine_cert.c
    src/lic_platform_device_uuid.c
    src/lic_sign.c
    src/lic_verify.c)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC_LIST} ${PUBLIC_HEADERS})
TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE LIC_EXPORT)
ADD_LIBRARY(${PROJECT_NAME}::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ${MODULE_CFLAGS_ALL})

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC ${LIC_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${LIBCRYPTO_LIBRARIES})

INSTALL( TARGETS ${PROJECT_NAME} DESTINATION ${IMAGE_PROCESS_INSTALL_DIR} )
INSTALL( FILES ${PUBLIC_HEADERS} DESTINATION ${IMAGE_PROCESS_INSTALL_DIR}/include )

find_package(OpenSSL REQUIRED)
if (OPENSSL_FOUND)
  MESSAGE(STATUS "Found OpenSSL ${OPENSSL_VERSION}")
else()
  MESSAGE(STATUS "OpenSSL Not Found")
endif()


# Examples
SET(signle_file_example
    console_sign
    console_verify)

FOREACH(example ${signle_file_example})
    ADD_EXECUTABLE(${example} examples/${example}.c)
    TARGET_INCLUDE_DIRECTORIES(${example} PRIVATE ${LIC_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES(${example} ${PROJECT_NAME})
    if (OPENSSL_FOUND)
        TARGET_INCLUDE_DIRECTORIES(${example} PRIVATE ${OPENSSL_INCLUDE_DIR})
        TARGET_LINK_LIBRARIES(${example} OpenSSL::SSL OpenSSL::Crypto)
    endif()
    SET_TARGET_PROPERTIES(${example} PROPERTIES COMPILE_FLAGS ${MODULE_CFLAGS_ALL})
ENDFOREACH(example)